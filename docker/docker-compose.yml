version: "3"

services:
  db:
    image: postgres:13
    container_name: postgres_db
    volumes:
      - ../data/db:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=flickr
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=pgpass
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -t 5 -U postgres"]
      interval: 5s
      timeout: 6s
      retries: 3
    ports:
      - "5432:5432"
    networks:
      - app_net

  flickr_clone:
    container_name: flickr_clone
    build:
      context: ..
      dockerfile: docker/Dockerfile.webapp
    environment:
      DJANGO_USER: admin
      DJANGO_PASS: pass
      MINIO_ENDPOINT: minio1
      MINIO_PORT: 9000
      MINIO_SSL: 'False'
      MINIO_USERNAME: minio
      MINIO_PASSWORD: minio123
    command: >
      sh -c "pipenv run python manage.py migrate &&
             pipenv run python manage.py runserver 0.0.0.0:8000"
    volumes:
      - ../flickr_clone:/app
    networks:
      - app_net
    ports:
      - "8000:8000"
    links:
      - minio1
    depends_on:
      db:
        condition: service_healthy

  minio1:
    image: minio/minio:RELEASE.2021-02-24T18-44-45Z
    volumes:
      - data1-1:/data1
      - data1-2:/data2
    expose:
      - "9000"
    environment:
      MINIO_ROOT_USER: minio
      MINIO_ROOT_PASSWORD: minio123
    networks:
      - app_net
    command: server http://minio{1...4}/data{1...2}
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  minio2:
    image: minio/minio:RELEASE.2021-02-24T18-44-45Z
    volumes:
      - data2-1:/data1
      - data2-2:/data2
    expose:
      - "9000"
    environment:
      MINIO_ROOT_USER: minio
      MINIO_ROOT_PASSWORD: minio123
    networks:
      - app_net
    command: server http://minio{1...4}/data{1...2}
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  minio3:
    image: minio/minio:RELEASE.2021-02-24T18-44-45Z
    volumes:
      - data3-1:/data1
      - data3-2:/data2
    expose:
      - "9000"
    environment:
      MINIO_ROOT_USER: minio
      MINIO_ROOT_PASSWORD: minio123
    networks:
      - app_net
    command: server http://minio{1...4}/data{1...2}
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  minio4:
    image: minio/minio:RELEASE.2021-02-24T18-44-45Z
    volumes:
      - data4-1:/data1
      - data4-2:/data2
    expose:
      - "9000"
    environment:
      MINIO_ROOT_USER: minio
      MINIO_ROOT_PASSWORD: minio123
    networks:
      - app_net
    command: server http://minio{1...4}/data{1...2}
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  nginx:
    image: nginx:1.19.2-alpine
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - "9000:9000"
    networks:
      - app_net
    depends_on:
      - minio1
      - minio2
      - minio3
      - minio4

## By default this config uses default local driver,
## For custom volumes replace with volume driver configuration.
volumes:
  data1-1:
  data1-2:
  data2-1:
  data2-2:
  data3-1:
  data3-2:
  data4-1:
  data4-2:


networks:
  app_net:
